on: [push, pull_request]
jobs:
  gradle-android-test:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    # TODO(robinlinden): Fix tests failing sporadically in CI.
    # TODO(robinlinden): We're using an ancient emulator build due to the world shifting around us:
    #                    https://github.com/ReactiveCircus/android-emulator-runner/issues/160
    - name: Test
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: ./gradlew connectedCheck -x :atox:connectedAndroidTest -x :domain:connectedAndroidTest || { adb logcat -d; exit 1; }
        emulator-build: 6110076

  ktlint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: ktlint
      run: ./gradlew ktlint

  gradle-wrapper-validation:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: gradle/wrapper-validation-action@v1

  # TODO(robinlinden): Re-enable once the jvm-toxcore-* libraries are published somewhere.
  # gradle:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     max-parallel: 6
  #     matrix:
  #       os:
  #       - ubuntu-20.04
  #       - macOS-10.15
  #       - windows-2019
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-java@v1
  #     with:
  #       java-version: 1.8
  #   - name: Build and test
  #     run: ./gradlew build

  bazel:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    # Failed to create a Robolectric sandbox: Android SDK 29 requires Java 9
    - uses: actions/setup-java@v1
      with:
        java-version: 9
    - name: Set up Android
      run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "ndk;$NDK_VERSION" | grep -v = || true
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$NDK_VERSION" >> $GITHUB_ENV
      env:
        NDK_VERSION: 22.1.7171670
    - name: Set up Bazel cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/bazel
        key: bazel
    - name: Install
      run: wget https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 --output-document=bazelisk
    - name: Build
      run: bazelisk build //...
    - name: Test
      run: bazelisk test //...

  buildifier:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
          wget https://github.com/bazelbuild/buildtools/releases/download/3.5.0/buildifier
          sudo chmod +x buildifier
    - name: Check
      run: ./buildifier --lint=warn --warnings=all -mode diff WORKSPACE $(find . -type f -iname BUILD.*)
